{"noir_version":"0.30.0+af57471035e4fa7eaffa71693219df6d029dbcde","hash":4700559893947194090,"abi":{"parameters":[{"name":"input","type":{"kind":"array","length":2,"type":{"kind":"field"}},"visibility":"private"}],"param_witnesses":{"input":[{"start":0,"end":2}]},"return_type":null,"return_witnesses":[],"error_types":{}},"bytecode":"H4sIAAAAAAAA/9Vay3LaMBS9NsaGmNKYJkCTTffdyA+wvSPf0C/AE7vrdvJ9/bROEZWaG6FmAUcerBlGQjZH5z6ko5Hw6G95PHy+qvZY1R6rfXpb9LOdqsVlJQViCVccPSBHm29lPWK8/xWUAWNLMNFO8g18EK4gSzkTOzU7ON9A1dpXiAFPCHgq0nKwX2qgkRp05zgwvoGbi21RtGXWpnm6F1ndVBtRbJptlVbppto8Z1Wet1VRlXVTl6IWRd6m3abOO4UbnI+VGlhiTG4Sxgf7Emlz+A5WVbZNVxb5XhRdc8DZdm2+z+q0q/IDfF6kzb4Vz0VTbott1ZVH//lkSVwH+RQSfjWUJSKHE8+VIyIHuBNgkrmye4KPkZUrYmGRXC9dCExcZIymhJ1QUlAk5hO9qpm5jXORF0Cs3lT/RtUx9aD6cjCu+jEbQ5eRw6Bcqvg3hEv6mIah+EibZzRMxZ+RG8X/QANT/JlBGoU7ByaZK7vn+Bg5UfxYcUUrPjJGHwmv+BLzid4W9GI4pusUgD7ON0b0Ks5A3N52OreqTqiHnY4cjO90EnJ3vqEDgz7fuCVcsifkJmHQExxp84KGudtZEHZx1uUTDWy3szBIo3DvgEnmyu47fIyc7HYSxRW920HG6J6wE0ou9hKz7/MN5DWQha4T1V+qekU9qL4cjKv+ityfb/CgXKr4S8Il/YqGofhIm9c0TMVfkxvF/0wDU/y1QRqF+0DXrfjS7gd8jJwo/kpxRSs+MkaPhFd8ien6fCOh6xQA6YPAsJnnlrVopf2iavPKbocgV4hCXgdqduY2zLx6A415vH4boXEPCRDTqaNj1tbP5LXvktkY4G3MJO4Yb+MRN8LjHpNU55g+KIzYd+2rqWoDt9MpH9tTnykbU8dOt+/Zu/o97Q+fxVgWeeAfqvb0nd8Fxu/m7J3QYv+OsPZHBp/I4CxjoK875ULnG3N2wngCuWV8ThHzHxl8yeIrB/l/vNHTvvnevnz78fOF/ynPnP78Gaf9+z/v+Gf8PmZmB6zPnD58KQpZn14KechD4z3OiSx9PESepe3TqU28beuLLeMklr7IwtVMES4l0nc71RYXFomh/Te2cAvYc56aHp5Lyu21/SE0sfjnD01efgbJKwAA","debug_symbols":"ndbNqsIwEAXgd8m6XDKZ/LWvcrlcolYplFRsFaT47qZqN21ATnc5Sb7VMMmM4lDvrqf/Jh67XlS/o2i7fRiaLqY0Cvna6s8hTqkfwmUQlZKqEHU8pBW5RyGOTVuLStvHXyEoC1jOwOgFUChgFGgUGBRYFDgUeBSUKCAJi3ytjZ+F46VQsGBYaFgYWFhYOFh4WJSoUBIW3/p7LfI19+4jmGgpGBYaFgYWFhYOFh4WJSpYwoJgka05k5kFy6VgWGhYGFhYWDhYeFiUqNASFgSLb32+EvIn/zaQ5o+h1Z+TDG8weoMxG4zFTAq3cGnCrq2naWs6u8b9PHylONzP75N09wk=","file_map":{"46":{"source":"#[oracle(getSqrt)]\nunconstrained fn sqrt(input: [Field; 2]) -> [Field; 2] {}\n\nunconstrained fn get_sqrt(input: [Field; 2]) -> [Field; 2] {\n    sqrt(input)\n}\n\nfn main(input: [Field; 2]) {\n    let sqrt = get_sqrt(input);\n    assert(sqrt[0].pow_32(2) as u64 == input[0] as u64);\n    assert(sqrt[1].pow_32(2) as u64 == input[1] as u64);\n}\n\n#[test]\nfn test_main() {\n    let input = [4, 16];\n    main(input)\n}\n\n#[test(should_fail)]\nfn test_fail() {\n    let input = [4, 15];\n    main(input)\n}\n","path":"/Users/flyingnobita/Data/Project/zk/Aztec/quadratic_voting_noir/oracle_circuit/src/main.nr"}},"names":["main"]}